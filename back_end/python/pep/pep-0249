모듈 인터페이스

생성자
* Connect() : 데이터베이스 연결 생성자, connect 객체를 반환 


글로벌
* threadsafety : 인터페이스가 지원하는 스레드 안전 수준 (세마포어로 관리하는지 여부)
* Paramstyle : 인터페이스가 예쌍하는 매개변수 표시 문자 형식의 유형


경고
* Warning :  삽입하는 동안 데이터잘림과 같은 중요한 경의 예외 발생, standardError의 서브 클래스 여야 한다.
* Error : 예외를 제외만 모든 오류
* InterfaceErro : 데이터베이스 인터페이즈 관련 오류 error의 서브 클래스 
* DatabaseError : 데이터베이스 관련 오류 error의 서브 클래스 
* operationalError : 데이터베이스 작동과 관련있지만, 제어 불가능한 오류 (예기치 못한 연결 끊김, 데이터 소스를 찾을수 없음, 트랙잭션을 완료 할수 없음 등) DatabaseError의 서브 클래스 
* IntegrityError : 데이터베이스의 관계 무결성 관련에러(외래키 실패) DatabaseError의 서브 클래스 
* InternalError : 데이터베이스 내부 오류 (커서 오류, 트랜잭션 동기화 오류) DatabaesError의 서브 클래스 
* ProgrammingError : 프로그래밍 오류 (예 : 테이블을 찾을 수 없거나 이미 존재 함), SQL 문의 구문 오류, 잘못된 매개 변수 수 지정 등의 예외  DatabaesError의 서브 클래스
* NotSupportedError : 트랜잭션을 지원하지 않거나 트랜잭션이 해제 된 연결에서 .rollback () 요청과 같이 데이터베이스에서 지원하지 않는 메소드 또는 데이터베이스 API가 사용 된 경우 예외가 발생 합니다. DatabaseError 의 서브 클래스


import exceptions


class Error(exceptions.StandardError):
    pass


class Warning(exceptions.StandardError):
    pass


class InterfaceError(Error):
    pass


class DatabaseError(Error):
    pass


class InternalError(DatabaseError):
    pass


class OperationalError(DatabaseError):
    pass


class ProgrammingError(DatabaseError):
    pass


class IntegrityError(DatabaseError):
    pass


class DataError(DatabaseError):
    pass


class NotSupportedError(DatabaseError):
    pass



StandardError
|__Warning
|__Error
   |__InterfaceError
   |__DatabaseError
      |__DataError
      |__OperationalError
      |__IntegrityError
      |__InternalError
      |__ProgrammingError
      |__NotSupportedError


연결 객체 

연결 메소드 
*  .close() : 지금 연결 닫기
* .commit() :  보류중인 트랜잭션을 커밋
* .rollback() :  (선택사항) - 데이터베이스가 보류중인 트랜잭션의 시작으로 롤백됩니다. 변경사항을 커밋하지 않고 연결을 닫으면 암묵적으로 롤백이 수행됩니다. 
* .cursor() : 연결 중인 새 커서 객체를 반환합니다. 


커서 객체 

커서 메소드 
* .close() - 커서를 지금 닫기
* .execute() : 작업중인 명령을 실행, 반환값이 정의되지 않음
* .executemany() : 모든 명령에 대하여 실행
* .fetchone() : 쿼리 결과의 당므행을 가져와 단일 시퀀스를 반환, 데이터가 없다면 None
* .fetchmany() : 일련의 시퀀스를 반환, 데이터가 없다면 “[]"
* .fetchall() : 쿼리결과의 모든 행을 가져와서 시퀀스 반환 (작업 성능에 영향을 줄수 있음)
* .next() : 다음 세트의 결과값을 가져옴, 없다면 None

타입 객체와 생성자 

* Date()
* time()
* timestampe()
* DatefromTicks()
* timefromTicks()
* TimestampfromTicks()
* Binary()
* string
* binary
* number
* datetime
* rowid


2단계 커밋(TPC) 확장

* .xid() : 트랜잭션 ID 리턴
* .tpc_begin() : 트랜잭션 Id로 TPC 트랜잭션 시작
* .tpc_prepare() : tcp_commit() / tpc_rollback() 전까지 대기 
* .tpc_commit() : tpc_prepare()로 준비된 tcp 트랜잭션 커밋
* .tpc_rollback() : tcp 트랜잭션 롤백 
* .tpc_recover() : 보류중인 트랜잭션 id 목록 리턴
