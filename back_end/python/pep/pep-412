* 내장 사전 유형인 dict의 구현 변경 제안, 사전이 동일한 클래스 인스턴스의 다른 속성 사전과 키를 공유하도록 변경


현재 사전 구현에서는 키가 동일한 클래스의 여러 인스턴스에서 공유되지 않고 각 인스턴스에 대해 복제되므로 오브젝트 속성의 컨테이너로 사용될 때 필요한 것보다 많은 메모리를 사용

키와 해시를 값에서 분리하면 여러 사전간에 키를 공유하고 메모리 사용을 향상시킬 수 있다


* 속도
성능은 메모리 위치 효과에 의해 좌우된다. 

공유 키의 경우, 새로운 구현은 키를 값과 분리하는 경향이 있지만 총 메모리 사용량을 줄입니다. 이렇게하면 메모리 사용량 감소 효과가 지역 손실보다 중요하기 때문에 성능이 향상 될 수 있지만 일부 프로그램은 약간 느려질 수 있다


기존 사전과 새로운 사전은 모두 고정 크기의 dict 구조체와 크기를 조정할 수있는 테이블로 구성된다. 

새로운 사전에서 테이블을 키 테이블과 값 배열로 더 나눌 수 있다.

키 테이블에는 키와 해시 및 (분할되지 않은 테이블의 경우) 값도 있다

이전에 dict 구조체에 있었던 많은 필드를 포함한다는 점에서 원래 구현과 다르다


단점

데이터 구조로 변경 : 사전 구현의 내부와 통합되는 타사 모듈이 손상됩니다.
repr () 출력 및 반복 순서 변경 : 대부분의 경우 변경되지 않습니다. 그러나 일부 분할 테이블 사전의 경우 반복 순서가 변경됩니다.
이러한 단점 중 어느 것도 문제가되지 않습니다. 사전 구현의 내부와 통합 된 모듈은 이미 고장 났으므로 API를 사용하도록 수정해야합니다. 사전의 반복 순서는 정의되지 않았으며 항상 임의적이었습니다. 자이 썬과 파이 파이는 다르다.



